{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst fp = flatpickr('#datetime-picker', options);\n\nrefs.btnTimerStart.addEventListener('click',startTimer);\n\n\n\nconst refs = {\n  btnTimerStart: document.querySelector('[data-start]'),\n  daysRef: document.querySelector('[data-days]'),\n  hoursRef: document.querySelector('[data-hours]'),\n  minutesRef: document.querySelector('[data-minutes]'),\n  secondsRef: document.querySelector('[data-seconds]'),\n};\n\nrefs.btnTimerStart.disabled = true;\nlet timerId = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    const currentDate = new Date();\n\n    if (selectedDates[0] - currentDate > 0) {\n      refs.btnTimerStart.disabled = false;\n    } else {\n      refs.btnTimerStart.disabled = true;\n      Notify.failure('Please choose a date in the future', {\n        timeout: 1500,\n        width: '400px',\n      });\n    }\n  },\n};\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, 0);\n}\n\nfunction startTimer() {\n  const selectedDate = fp.selectedDates[0];\n\n  timerId = setInterval(() => {\n    const startTime = new Date();\n    const countdown = selectedDate - startTime;\n    refs.btnTimerStart.disabled = true;\n\n    if (countdown < 0) {\n      clearInterval(timerId);\n      return;\n    }\n    updateTimerFace(convertMs(countdown));\n  }, 1_000);\n}\n\nfunction updateTimerFace({ days, hours, minutes, seconds }) {\n  refs.timerFieldDays.textContent = addLeadingZero(days);\n  refs.timerFielHours.textContent = addLeadingZero(hours);\n  refs.timerFieldMinutes.textContent = addLeadingZero(minutes);\n  refs.timerFieldSeconds.textContent = addLeadingZero(seconds);\n}\n\n\n\n  "],"names":["fp","flatpickr","options","refs","startTimer","timerId","selectedDates","currentDate","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","selectedDate","countdown","updateTimerFace"],"mappings":"oGAIA,MAAMA,EAAKC,EAAU,mBAAoBC,CAAO,EAEhDC,EAAK,cAAc,iBAAiB,QAAQC,CAAU,EAItD,MAAMD,EAAO,CACX,cAAe,SAAS,cAAc,cAAc,EACpD,QAAS,SAAS,cAAc,aAAa,EAC7C,SAAU,SAAS,cAAc,cAAc,EAC/C,WAAY,SAAS,cAAc,gBAAgB,EACnD,WAAY,SAAS,cAAc,gBAAgB,CACrD,EAEAA,EAAK,cAAc,SAAW,GAC9B,IAAIE,EAAU,KAEd,MAAMH,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQI,EAAe,CACrB,MAAMC,EAAc,IAAI,KAEpBD,EAAc,CAAC,EAAIC,EAAc,EACnCJ,EAAK,cAAc,SAAW,IAE9BA,EAAK,cAAc,SAAW,GAC9B,OAAO,QAAQ,qCAAsC,CACnD,QAAS,KACT,MAAO,OACf,CAAO,EAEJ,CACH,EAEA,SAASK,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,CAAC,CACpC,CAEA,SAASX,GAAa,CACpB,MAAMY,EAAehB,EAAG,cAAc,CAAC,EAEvCK,EAAU,YAAY,IAAM,CAE1B,MAAMY,EAAYD,EADA,IAAI,KAItB,GAFAb,EAAK,cAAc,SAAW,GAE1Bc,EAAY,EAAG,CACjB,cAAcZ,CAAO,EACrB,MACD,CACDa,EAAgBV,EAAUS,CAAS,CAAC,CACrC,EAAE,GAAK,CACV,CAEA,SAASC,EAAgB,CAAE,KAAAR,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1DV,EAAK,eAAe,YAAcW,EAAeJ,CAAI,EACrDP,EAAK,eAAe,YAAcW,EAAeH,CAAK,EACtDR,EAAK,kBAAkB,YAAcW,EAAeF,CAAO,EAC3DT,EAAK,kBAAkB,YAAcW,EAAeD,CAAO,CAC7D"}